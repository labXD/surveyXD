name: CI
on:
  pull_request:
    types:
      - opened
      - edited
      - reopened
      - synchronize
    branches:
      - main

jobs:
  lint-code:
    name: Check Code quality
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Get node version
        run: |
          echo "PROJECT_NODE_VERSION=$(cat $GITHUB_WORKSPACE/.nvmrc)" >> $GITHUB_ENV

      - name: Get Pnpm version
        run: |
          echo "PROJECT_PNPM_VERSION=$(cat package.json | jq -r .packageManager | awk -F"@" '{ print $NF; }')" >> $GITHUB_ENV

      - name: Setup Node.js version ${{ env.PROJECT_NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.PROJECT_NODE_VERSION }}

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: ${{ env.PROJECT_PNPM_VERSION }}
          run_install: false
      
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm run lint:ci

      - name: Gen types
        run: DATABASE_URL=mysql://root:root@localhost:3306/neo pnpm run db:gen
        working-directory: apps/surveyxd
 
      - name: Typecheck
        run: pnpm run typecheck
        working-directory: apps/surveyxd

  lint-pr-title:
    name: Validate PR title
    runs-on: ubuntu-latest
    steps:
      - uses: amannn/action-semantic-pull-request@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          scopes: |
            trinity
            furiosa
            scirpts
            deps
          validateSingleCommit: true
          validateSingleCommitMatchesPrTitle: true

