name: CD
on:
  pull_request:
    types:
      - opened
      - edited
      - reopened
      - synchronize
    branches:
      - main

jobs:
  deployment:
    name: PR deployment
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Cache Docker images.
        uses: ScribeMD/docker-cache@0.2.3
        with:
          key: docker-${{ runner.os }}-${{ hashFiles(...) }}

      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
        with:
          project_id: ${{ steps.auth.outputs.project_id }}

      - name: Configure Google Cloud as auth provider for docker
        shell: bash
        run: gcloud --quiet auth configure-docker

      - name: Get node version
        run: |
          echo "PROJECT_NODE_VERSION=$(cat $GITHUB_WORKSPACE/.nvmrc)" >> $GITHUB_ENV

      - name: Get Pnpm version
        run: |
          echo "PROJECT_PNPM_VERSION=$(cat package.json | jq -r .packageManager | awk -F"@" '{ print $NF; }')" >> $GITHUB_ENV

      - name: Setup Node.js version ${{ env.PROJECT_NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.PROJECT_NODE_VERSION }}

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: ${{ env.PROJECT_PNPM_VERSION }}
          run_install: false
      
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Deploy
        run: |
          pull_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          pnpm run cli deploy surveyxd preview pr-"$pull_number" 

